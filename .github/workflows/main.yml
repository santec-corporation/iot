name: Nuget package publish

on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI
  push:
    tags:
      - 'v*'              # Run the workflow when pushing a tag that matches the pattern v*
  release:
    types:
      - published    # Run the workflow when a new GitHub release is published

env:
  NAMESPACE: santec-corporation
  NuGetDirectory: ${{ github.workspace }}/nuget
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages 
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_MULTILEVEL_LOOKUP: 0

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Get all history to allow automatic versioning using MinVer
        submodules: recursive
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
        ref: Santec
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
    - name: Cache Nuget Packages
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/**/Directory.Build.props') }}
        path: ${{ github.workspace }}/.nuget/packages
    - name: Build & Pack
      run: |
        ./Build.cmd -ci -configuration Release -prepareMachine /p:BuildPackages=true
    # Publish the NuGet package as an artifact, so they can be used in the following jobs
    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: artifacts/packages/Release/Shipping/*.nupkg
  deploy:
    runs-on: windows-latest
    needs: [ "build" ]
    steps:
    # Download the NuGet package created in the previous job
    - uses: actions/download-artifact@v4
      with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

    # Install the .NET SDK indicated in the global.json file
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4

    # Publish all NuGet packages to NuGet.org
    # Use --skip-duplicate to prevent errors if a package with the same version already exists.
    # If you retry a failed workflow, already published packages will be skipped without error.
    - name: Publish NuGet package
      run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.GITHUB_TOKEN }}" --source https://nuget.pkg.github.com/santec-corporation/index.json --skip-duplicate
          }
